# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: CMTS API
  description: B2B Meeting Scheduling System
  version: "1.0.0"
# the domain of the service
#host: api.uber.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /login:
    get:
      summary: User Login
      description: |
       The endpoint takes user email and passwod and returns authentication token for given user credentials if it exists in the database. The auth token is encrypted with user-id information and user-role for authorization purposes.
      parameters:
        - name: username
          in: formData
          description: User email.
          required: true
          type: string
        - name: password
          in: formData
          description: User password.
          required: true
          type: string
      tags:
        - Login
      responses:
        200:
          description: Auth Token
          schema:
            $ref: '#/definitions/LoginToken'
        401:
          description: Invalid username/password.
          schema:
            $ref: '#/definitions/Error'
 
  /forgotPassword:
    get:
      summary: Forgot Password
      description: The api endpoint sends an email to user email id containing link to reset password page or security code if there is a user entry in database.Once user has successfully changed password, return authentication token.
      parameters:
        - name: username
          in: formData
          description: User email.
          required: true
          type: string
      tags:
        - Login
      responses:
        200:
          description: Auth Token
          schema:
            $ref: '#/definitions/LoginToken'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
 
definitions:
  LoginToken:
    type: string
    properties:
      authToken:
        type: string
        description: Encrypted Token containing user information
 
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
